{:tasks
 {release:docker-github
  {:doc "Build the docker image with the GitHub Container Registry tag."
   :task (shell "docker build -t ghcr.io/hhucn/decide3:latest .")}

  cljs:clean
  {:requires ([babashka.fs :as fs])
   :task (do
           (fs/delete-tree ".shadow-cljs")
           (fs/delete-tree "resources/public/js")
           (fs/delete-tree "resources/public/workspaces/js"))}

  cljs:install
  {:task (shell "yarn install")}

  dev:watch-cljs
  {:depends [cljs:install]
   :task (shell "clj -M:dev -m \"shadow.cljs.devtools.cli\" watch :main")}

  i18n
  {:task (clojure "-M:dev -m \"shadow.cljs.devtools.cli\" release :i18n")}

  test:clj
  {:task (clojure "-M:dev:clj-tests")}

  test:cljs
  {:task
   (do
     (clojure "-M:dev -m \"shadow.cljs.devtools.cli\" compile ci-tests")
     (shell "yarn karma start --single-run --reporters junit"))}

  test:watch-cljs
  {:task (clojure "-M:dev -m \"shadow.cljs.devtools.cli\" watch :test")}

  test:watch-clj
  {:task (clojure "-M:dev:clj-tests :unit --watch")}

  ;; Release jobs
  release:js
  {:task (shell "clj -M:dev -m \"shadow.cljs.devtools.cli\" release :main")}

  release:uberjar
  {:task (shell "clj -T:build uber")}

  release
  {:depends [cljs:clean release:js release:uberjar]}

  report
  {:task
   (shell "clj -M:dev -m \"shadow.cljs.devtools.cli\" run shadow.cljs.build-report main report.html")}

  outdated:clj
  {:task (clojure {:continue true} "-Sdeps '{:deps {com.github.liquidz/antq {:mvn/version \"RELEASE\"} org.slf4j/slf4j-nop {:mvn/version \"RELEASE\"}}}' -M -m antq.core")}

  outdated:js
  {:depends [cljs:install]
   :task (shell "yarn outdated")}

  outdated
  {:depends [outdated:clj outdated:js]}

  deploy (shell "ssh root@ebbinghaus.me 'cd decide ; ./deploy.sh'")
  deploy:experiment (shell "ssh root@ebbinghaus.me 'cd decide-experiment ; ./deploy.sh'")
  deploy:all {:depends [deploy deploy:experiment]}}}